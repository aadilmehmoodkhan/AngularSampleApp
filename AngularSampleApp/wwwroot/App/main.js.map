{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/profile/profile.component.css","webpack:///./src/app/components/profile/profile.component.html","webpack:///./src/app/components/profile/profile.component.ts","webpack:///./src/app/components/top-navigation/top-navigation.component.html","webpack:///./src/app/components/top-navigation/top-navigation.component.ts","webpack:///./src/app/config.ts","webpack:///./src/app/services/account.service.ts","webpack:///./src/app/services/localstore.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<app-top-navigation></app-top-navigation>\\n<div class=\\\"container\\\">\\n    <router-outlet></router-outlet>\\n</div>\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { AccountService } from './services/account.service';\nimport { LOCAL_STORAGE_TOKEN, LocalStore } from './services/localstore.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent implements OnInit {\n\n  title = 'Freelance World';\n\n  constructor(private accountService: AccountService,\n    private localStore: LocalStore) {\n  }\n\n  ngOnInit(): void {\n    this.accountService.getUserName()\n    .subscribe(o => {\n      let username = o.data;\n      this.localStore.setLoggedInUserName(username);\n    });\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { TopNavigationComponent } from './components/top-navigation/top-navigation.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { AccountService } from './services/account.service';\nimport { LOCAL_STORAGE_TOKEN, LocalStore } from './services/localstore.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TopNavigationComponent,\n    HomeComponent,\n    ProfileComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    RouterModule.forRoot([\n      { path: \"\", component: HomeComponent },\n      { path: \"profile\", component: ProfileComponent }\n    ])\n  ],\n  providers: [\n    AccountService,\n    { provide: LOCAL_STORAGE_TOKEN, useValue: window.localStorage },\n    LocalStore\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<div class=\\\"display-3\\\">Welcome home dear!</div>\\n<p>\\n  Lorem ipsum dolor sit amet, consectetur adipisicing elit. Repudiandae optio non sint a officiis nemo omnis consectetur odit consequatur! Repudiandae inventore ipsum qui nobis voluptas ad expedita laudantium quis possimus!\\n</p>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html'\n})\nexport class HomeComponent {\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  profile works!\\n</p>\\n<button class=\\\"btn btn-primary\\\" (click)=\\\"healthCheck()\\\">Health Check</button>\"","import { Component, OnInit } from '@angular/core';\nimport { AccountService } from 'src/app/services/account.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  constructor(private accountService: AccountService) { }\n\n  ngOnInit() {\n    \n  }\n\n  healthCheck() {\n    this.accountService.healthCheck()\n      .subscribe(rc => console.log(rc));\n  }\n\n}\n","module.exports = \"<nav class=\\\"navbar navbar-expand-md navbar-dark bg-dark\\\">\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Freelance World</a>\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarCollapse\\\">\\n        <ul class=\\\"navbar-nav mr-auto\\\">\\n            <li class=\\\"nav-item\\\">\\n                <a class=\\\"nav-link\\\" routerLink=\\\"/\\\">Home</a>\\n            </li>\\n            <li class=\\\"nav-item\\\">\\n                <a class=\\\"nav-link\\\" routerLink=\\\"profile\\\">Profle</a>\\n            </li>\\n            <li class=\\\"nav-item\\\">\\n                <a class=\\\"nav-link\\\" href=\\\"/App/Logout\\\">Logout ({{userName}})</a>\\n            </li>\\n        </ul>\\n    </div>\\n</nav>\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { LocalStore } from 'src/app/services/localstore.service';\n\n@Component({\n  selector: 'app-top-navigation',\n  templateUrl: './top-navigation.component.html'\n})\nexport class TopNavigationComponent implements OnInit {\n\n  constructor(private localStore: LocalStore) {\n  }\n\n  userName: string = \"\";\n\n  ngOnInit(): void {\n    this.userName = this.localStore.getLoggedInUserName();\n  }\n}\n","export const config = {\r\n\tservices: {\r\n\t\tbasePath: \"/api\"\r\n\t}\r\n}","import { Injectable } from '@angular/core';\nimport { config } from '../config';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class AccountService {\n  constructor(private http: HttpClient) {\n  }\n\n  private getApiMethodLink(method: string): string {\n    return `${config.services.basePath}/account/${method}`;\n  }\n\n  healthCheck() : Observable<object> {\n    return this.http.get(this.getApiMethodLink(\"hc\"));\n  }\n\n  getUserName(): Observable<any> {\n    return this.http.get<any>(this.getApiMethodLink(\"getUserName\"));\n  }\n}\n","import { InjectionToken, Injectable, Inject } from \"@angular/core\";\r\n\r\nexport let LOCAL_STORAGE_TOKEN = new InjectionToken<Storage>(\"localStorage\");\r\n\r\n@Injectable()\r\nexport class LocalStore {\r\n    constructor(@Inject(LOCAL_STORAGE_TOKEN) private winLocalStorage: Storage) {\r\n    }\r\n\r\n    private USER_NAME: string = \"USER_NAME\";\r\n\r\n    getLoggedInUserName(): string {\r\n        return this.winLocalStorage.getItem(this.USER_NAME);\r\n    }\r\n\r\n    setLoggedInUserName(userName: string) {\r\n        this.winLocalStorage.setItem(this.USER_NAME, userName);\r\n    }\r\n}\r\n\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}